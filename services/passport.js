const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose')
const keys = require('../config/keys');

const User = mongoose.model('users');

passport.serializeUser((user, done) => {
  //here, user is what we just pulled out of the database two seconds ago
  //user.id is id generated by mongo
  done(null, user.id);
});

passport.deserializeUser((id, done) => {
  User.findById(id).then(user => {
    done(null, user);
  });
});

//passport to use a new strategy for users to authenticate themselves inside our app
passport.use(
  new GoogleStrategy(
    {
      clientID: keys.googleClientID,
      clientSecret: keys.googleClientSecret,
      callbackURL: '/auth/google/callback',
      proxy: true
    }, 
    async (accessToken, refreshToken, profile, done) => {  
      const existingUser = await User.findOne({ googleId: profile.id })
      if (existingUser) {
        //we already have a record with the given profile ID
        done(null, existingUser);
      } 
      //we dont have a record, make a new one
      const user = await new User({ googleId: profile.id }).save();
      done(null, user);
      
      
    }   
  )
);